# 1 つの実数を出力 3 (paizaランク D 相当)
# https://paiza.jp/works/mondai/stdout_primer/stdout_primer__format_real_number_step3

# 入出力例
INPUT1 = <<~"EOS"
  0.813
EOS
OUTPUT1 = <<~"EOS"
  0.813
EOS

INPUT2 = <<~"EOS"
  8.13
EOS
OUTPUT2 = <<~"EOS"
  8.130
EOS

INPUT3 = <<~"EOS"
  3.141692
EOS
OUTPUT3 = <<~"EOS"
  3.142
EOS

# 解答例1
# d = 3
# 入力
n = gets.to_f
# 小数第3位に丸める
n = n.round(d)
# 出力
puts("%.#{d}f" % n)

# 解答例2
d = 3
# 入力
n = gets.to_f
# 小数第3位に丸める
n = (n * 10 ** d + 0.5).floor / 10.0 ** d
# 整数部と小数部の文字列にして分ける
int_part, dec_part = n.to_s.split(".")
# 小数部の 0 が足りないなら追加する
dec_part += "0" * (d - dec_part.length)
# 出力
puts("#{int_part}.#{dec_part}")

=begin
1 つの実数を出力 3 (paizaランク D 相当)
問題にチャレンジして、ユーザー同士で解答を教え合ったり、コードを公開してみよう！

シェア用URL:
https://paiza.jp/works/mondai/stdout_primer/stdout_primer__format_real_number_step3
問題文のURLをコピーする
 チャレンジする言語

得意な言語を選択してください
コードを書いて解いてみる
問題
 下記の問題をプログラミングしてみよう！
実数 N が入力されます。N を丸めて小数第 3 位まで出力してください。
また、N の小数部が小数第 3 位に満たない場合は 0 で埋めて出力してください。

なお、小数第 4 位が 5 になることはありません。
自然な丸め処理を行って出力すると正解になります。

入力される値
N

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
答えの数値を出力してください。


N


末尾に改行を入れ、余計な文字 (とくに、813.00000 のような余分な 0)、空行を含んではいけません。
条件
すべてのテストケースにおいて、以下の条件をみたします。

* N は 0.001 以上 99.999999 未満
* N の小数第 4 位が 5 になることはありません。
* N に小数第 7 位以下の数値が含まれる入力は与えられません (0.1234567 、 0.0000001 などは与えられません)。
* N の最も小さな位の値が 0 である入力は与えられません (0.8130 、 10 などは与えられません)。

入力例1
0.813

出力例1
0.813

入力例2
8.13

出力例2
8.130

入力例3
3.141692

出力例3
3.142
=end
