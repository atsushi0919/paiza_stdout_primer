# 大きな数値を 3 けたごとにカンマ区切りで出力 (paizaランク C 相当)
# https://paiza.jp/works/mondai/stdout_primer/stdout_primer__specific_split_step6

# 入出力例
INPUT1 = <<~"EOS"
  123456789
EOS
OUTPUT1 = <<~"EOS"
  123,456,789
EOS

INPUT2 = <<~"EOS"
  813
EOS
OUTPUT2 = <<~"EOS"
  813
EOS

INPUT3 = <<~"EOS"
  123456789123456789
EOS
OUTPUT3 = <<~"EOS"
  123,456,789,123,456,789
EOS

# 解答例1
# 入力
n = gets.to_i
# n を文字列に変換して1文字に分割した配列を生成
ary = n.to_s.chars
# 3 桁毎に "," を追加する
s = ""
ary.each.with_index(1) do |c, i|
  s += c
  break if i == ary.length
  s += "," if i % 3 == 0
end
# 出力
puts(s)

# 解答例2
# 入力
n = gets.to_i
# 3 桁毎に "," を挿入した文字列を生成
s = n.to_s.gsub(/(\d{3})(?!\z)/, '\0,')
puts(s)

=begin
大きな数値を 3 けたごとにカンマ区切りで出力 (paizaランク C 相当)
問題にチャレンジして、ユーザー同士で解答を教え合ったり、コードを公開してみよう！

シェア用URL:
https://paiza.jp/works/mondai/stdout_primer/stdout_primer__specific_split_step6
問題文のURLをコピーする
 チャレンジする言語

得意な言語を選択してください
コードを書いて解いてみる
問題
 下記の問題をプログラミングしてみよう！
大きな数値 N が入力されます。3 けたごとにカンマ区切りで出力してください。
ただし、N のけた数は 3 の倍数です。

入力される値
N

入力値最終行の末尾に改行が１つ入ります。
文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
期待する出力
答えの数値を出力してください。


M


末尾に改行を入れ、余計な文字、空行を含んではいけません。
条件
すべてのテストケースにおいて、以下の条件をみたします。

* N は自然数かつ、けた数が 3 の倍数
* N は 0 以上 10 ^ 1,000 以下

入力例1
123456789

出力例1
123,456,789

入力例2
813

出力例2
813

入力例3
123456789123456789

出力例3
123,456,789,123,456,789
=end
